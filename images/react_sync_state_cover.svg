<svg viewBox="0 0 1200 600" xmlns="http://www.w3.org/2000/svg">
  <defs>
    <linearGradient id="coverBg" x1="0%" y1="0%" x2="100%" y2="100%">
      <stop offset="0%" style="stop-color:#064e3b;stop-opacity:1" />
      <stop offset="50%" style="stop-color:#047857;stop-opacity:1" />
      <stop offset="100%" style="stop-color:#065f46;stop-opacity:1" />
    </linearGradient>
    
    <linearGradient id="atomGrad" x1="0%" y1="0%" x2="100%" y2="100%">
      <stop offset="0%" style="stop-color:#61dafb;stop-opacity:1" />
      <stop offset="100%" style="stop-color:#21a1c4;stop-opacity:1" />
    </linearGradient>
    
    <radialGradient id="coreGrad" cx="40%" cy="40%">
      <stop offset="0%" style="stop-color:#ffffff;stop-opacity:1" />
      <stop offset="50%" style="stop-color:#6ee7b7;stop-opacity:1" />
      <stop offset="100%" style="stop-color:#10b981;stop-opacity:1" />
    </radialGradient>
    
    <radialGradient id="dbGrad" cx="35%" cy="30%">
      <stop offset="0%" style="stop-color:#d1fae5;stop-opacity:0.9" />
      <stop offset="50%" style="stop-color:#6ee7b7;stop-opacity:0.8" />
      <stop offset="100%" style="stop-color:#34d399;stop-opacity:0.7" />
    </radialGradient>
    
    <filter id="glow">
      <feGaussianBlur stdDeviation="4" result="coloredBlur"/>
      <feMerge>
        <feMergeNode in="coloredBlur"/>
        <feMergeNode in="coloredBlur"/>
        <feMergeNode in="SourceGraphic"/>
      </feMerge>
    </filter>
    
    <filter id="softGlow">
      <feGaussianBlur stdDeviation="2" result="coloredBlur"/>
      <feMerge>
        <feMergeNode in="coloredBlur"/>
        <feMergeNode in="SourceGraphic"/>
      </feMerge>
    </filter>
    
    <filter id="dropShadow">
      <feGaussianBlur in="SourceAlpha" stdDeviation="6"/>
      <feOffset dx="0" dy="4" result="offsetblur"/>
      <feComponentTransfer>
        <feFuncA type="linear" slope="0.3"/>
      </feComponentTransfer>
      <feMerge>
        <feMergeNode/>
        <feMergeNode in="SourceGraphic"/>
      </feMerge>
    </filter>
    
    <filter id="textGlow">
      <feGaussianBlur stdDeviation="3" result="coloredBlur"/>
      <feMerge>
        <feMergeNode in="coloredBlur"/>
        <feMergeNode in="SourceGraphic"/>
      </feMerge>
    </filter>
  </defs>
  
  <!-- Background -->
  <rect width="1200" height="600" fill="url(#coverBg)"/>
  
  <!-- Ambient depth -->
  <circle cx="250" cy="300" r="200" fill="#10b981" opacity="0.1"/>
  
  <!-- Decorative grid -->
  <g opacity="0.08">
    <line x1="0" y1="150" x2="1200" y2="150" stroke="#d1fae5" stroke-width="1"/>
    <line x1="0" y1="300" x2="1200" y2="300" stroke="#d1fae5" stroke-width="1"/>
    <line x1="0" y1="450" x2="1200" y2="450" stroke="#d1fae5" stroke-width="1"/>
    <line x1="300" y1="0" x2="300" y2="600" stroke="#d1fae5" stroke-width="1"/>
    <line x1="600" y1="0" x2="600" y2="600" stroke="#d1fae5" stroke-width="1"/>
    <line x1="900" y1="0" x2="900" y2="600" stroke="#d1fae5" stroke-width="1"/>
  </g>
  
  <!-- Left side: React Atom with synq-store core -->
  <g transform="translate(250, 300)" filter="url(#dropShadow)">
    <!-- React atomic orbits -->
    <ellipse cx="0" cy="0" rx="95" ry="40" fill="none" stroke="url(#atomGrad)" stroke-width="5" opacity="0.8" filter="url(#glow)"/>
    <ellipse cx="0" cy="0" rx="95" ry="40" fill="none" stroke="url(#atomGrad)" stroke-width="5" opacity="0.8" transform="rotate(60)" filter="url(#glow)"/>
    <ellipse cx="0" cy="0" rx="95" ry="40" fill="none" stroke="url(#atomGrad)" stroke-width="5" opacity="0.8" transform="rotate(120)" filter="url(#glow)"/>
    
    <!-- Synq-store database in center -->
    <g opacity="0.95">
      <ellipse cx="0" cy="18" rx="32" ry="12" fill="#000000" opacity="0.2"/>
      <rect x="-28" y="-5" width="56" height="20" fill="#059669"/>
      <rect x="-28" y="-5" width="5" height="20" fill="#6ee7b7" opacity="0.3"/>
      <rect x="23" y="-5" width="5" height="20" fill="#064e3b" opacity="0.4"/>
      <ellipse cx="0" cy="15" rx="28" ry="10" fill="#047857"/>
      <ellipse cx="0" cy="-5" rx="28" ry="10" fill="url(#dbGrad)" filter="url(#softGlow)"/>
      <ellipse cx="-9" cy="-7" rx="13" ry="6" fill="#ffffff" opacity="0.3"/>
      <path d="M -28,-5 A 28,10 0 0,1 28,-5" fill="none" stroke="#d1fae5" stroke-width="1.5" opacity="0.4"/>
    </g>
    
    <!-- React core -->
    <circle cx="0" cy="0" r="20" fill="url(#coreGrad)" filter="url(#glow)"/>
    <circle cx="-6" cy="-6" r="9" fill="#ffffff" opacity="0.6"/>
    <circle cx="-7" cy="-7" r="4" fill="#ffffff" opacity="0.9"/>
    
    <!-- Electrons -->
    <circle cx="95" cy="0" r="9" fill="#61dafb" filter="url(#softGlow)"/>
    <circle cx="93" cy="-2" r="3.5" fill="#ffffff" opacity="0.7"/>
    
    <g transform="rotate(60)">
      <circle cx="95" cy="0" r="9" fill="#61dafb" filter="url(#softGlow)"/>
      <circle cx="93" cy="-2" r="3.5" fill="#ffffff" opacity="0.7"/>
    </g>
    
    <g transform="rotate(120)">
      <circle cx="95" cy="0" r="9" fill="#61dafb" filter="url(#softGlow)"/>
      <circle cx="93" cy="-2" r="3.5" fill="#ffffff" opacity="0.7"/>
    </g>
    
    <!-- Hook symbols -->
    <g transform="translate(-85, -85)" opacity="0.9">
      <path d="M 0,0 Q 18,0 18,18 L 18,30 Q 18,42 6,42" 
            fill="none" 
            stroke="#6ee7b7" 
            stroke-width="6" 
            stroke-linecap="round" 
            filter="url(#softGlow)"/>
      <circle cx="6" cy="42" r="5" fill="#6ee7b7" filter="url(#softGlow)"/>
    </g>
    
    <g transform="translate(85, 85) scale(-1, -1)" opacity="0.9">
      <path d="M 0,0 Q 18,0 18,18 L 18,30 Q 18,42 6,42" 
            fill="none" 
            stroke="#6ee7b7" 
            stroke-width="6" 
            stroke-linecap="round" 
            filter="url(#softGlow)"/>
      <circle cx="6" cy="42" r="5" fill="#6ee7b7" filter="url(#softGlow)"/>
    </g>
  </g>
  
  <!-- Right side: Text content -->
  <g transform="translate(550, 220)">
    <!-- Main title -->
    <text x="0" y="0" font-family="'Inter', 'Segoe UI', Arial, sans-serif" font-size="90" font-weight="800" fill="#d1fae5" filter="url(#textGlow)">
      React-Sync-State
    </text>
    
    <!-- Subtitle -->
    <text x="0" y="60" font-family="'Inter', 'Segoe UI', Arial, sans-serif" font-size="26" font-weight="400" fill="#d1fae5" opacity="0.9">
      React hooks for synq-store state management
    </text>
    
    <!-- Feature badges -->
    <g transform="translate(0, 110)">
      <!-- Badge 1 -->
      <rect x="0" y="0" width="180" height="45" rx="22.5" fill="#61dafb" opacity="0.15"/>
      <text x="90" y="29" font-family="'Inter', 'Segoe UI', Arial, sans-serif" font-size="18" font-weight="600" fill="#61dafb" text-anchor="middle" opacity="0.95">
        ‚öõÔ∏è React Hooks
      </text>
      
      <!-- Badge 2 -->
      <rect x="200" y="0" width="200" height="45" rx="22.5" fill="#d1fae5" opacity="0.15"/>
      <text x="300" y="29" font-family="'Inter', 'Segoe UI', Arial, sans-serif" font-size="18" font-weight="600" fill="#d1fae5" text-anchor="middle" opacity="0.95">
        üîå Drop-in Ready
      </text>
      
      <!-- Badge 3 -->
      <rect x="420" y="0" width="180" height="45" rx="22.5" fill="#d1fae5" opacity="0.15"/>
      <text x="510" y="29" font-family="'Inter', 'Segoe UI', Arial, sans-serif" font-size="18" font-weight="600" fill="#d1fae5" text-anchor="middle" opacity="0.95">
        üì¶ Next.js
      </text>
    </g>
    
    <!-- Code snippet hint -->
    <g transform="translate(0, 185)">
      <rect x="0" y="0" width="620" height="80" rx="8" fill="#064e3b" opacity="0.5" stroke="#6ee7b7" stroke-width="1" opacity="0.3"/>
      <text x="15" y="30" font-family="'Fira Code', 'Courier New', monospace" font-size="16" fill="#6ee7b7" opacity="0.9">
        const data = useServerSyncedStore(store);
      </text>
      <text x="15" y="60" font-family="'Fira Code', 'Courier New', monospace" font-size="16" fill="#d1fae5" opacity="0.8">
        // Automatic sync, optimistic updates ‚ú®
      </text>
    </g>
  </g>
  
  <!-- Decorative particles -->
  <g opacity="0.6">
    <circle cx="450" cy="120" r="4" fill="#61dafb" filter="url(#softGlow)"/>
    <circle cx="980" cy="480" r="5" fill="#6ee7b7" filter="url(#softGlow)"/>
    <circle cx="1100" cy="180" r="3" fill="#61dafb" opacity="0.4"/>
    <circle cx="150" cy="500" r="4" fill="#6ee7b7" opacity="0.3"/>
    <circle cx="520" cy="530" r="3" fill="#61dafb" filter="url(#softGlow)"/>
    <circle cx="850" cy="80" r="3" fill="#6ee7b7" opacity="0.5"/>
  </g>
  
  <!-- Data flow lines -->
  <g opacity="0.15">
    <path d="M 100,50 Q 200,100 300,50" fill="none" stroke="#61dafb" stroke-width="2" stroke-dasharray="5,10"/>
    <path d="M 900,550 Q 1000,500 1100,550" fill="none" stroke="#6ee7b7" stroke-width="2" stroke-dasharray="5,10"/>
    <path d="M 400,100 L 500,150" fill="none" stroke="#61dafb" stroke-width="2" stroke-dasharray="5,10"/>
  </g>
</svg>